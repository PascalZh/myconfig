augroup Z_APPEARANCE
  au!
  au FileType haskell,python,vim,cpp,c,javascript,markdown setlocal colorcolumn=81 |
        \ hi ColorColumn ctermbg=Green guibg=Green
augroup END

set termguicolors
colorscheme one

" common
" 字体设置方法，windows系统要用windows的命令行安装字体
" 然后set guifont=*
" 选择字体
" 然后set guifont?就可以看到字体的名字了
"set cursorline
"set cursorcolumn
set noequalalways

set viewoptions=folds,options,cursor,unix,slash
set shortmess+=filmnrxoOtT          " Abbrev. of messages (avoids 'hit enter')
set shortmess+=c

set number
set relativenumber

" list mode
set nolist
set listchars=tab:\ \ ,eol:$,trail:*,extends:#

set scrolloff=2                 " Minimum lines to keep above and below cursor

set winminheight=0
set cmdheight=1
set showcmd
set laststatus=2
set more

" 设置了之后，vim就不会在一行文字超过一定长度后自动按Enter换行
set whichwrap=b,s,h,l,<,>,[,]
set nowrap
set textwidth=0

" Toggle Menu and Toolbar
set guioptions-=m
set guioptions-=T
set guioptions-=l " do not show vertical scrollbar
set guioptions-=L
set guioptions-=r
set guioptions-=R
set guioptions-=b

" airline
"let g:airline_disable_statusline = 1
"这个是安装字体后 必须设置此项"
"let g:airline_theme="qwq"
"let g:airline_powerline_fonts = 1

"打开tabline功能,方便查看Buffer和切换,省去了minibufexpl插件
"let g:airline#extensions#tabline#enabled = 1
"let g:airline#extensions#tabline#buffer_nr_show = 1

" 关闭状态显示空白符号计数
"let g:airline#extensions#whitespace#enabled = 0

" light line
function! CocCurrentFunction()
  return get(b:, 'coc_current_function', '')
endfunction

let g:lightline = {
      \ 'colorscheme': 'PaperColor',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'cocstatus', 'currentfunction', 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'component': {
      \   'lineinfo': ' %3l:%-2v',
      \ },
      \ 'component_function': {
      \   'readonly': 'LightlineReadonly',
      \   'cocstatus': 'coc#status',
      \   'currentfunction': 'CocCurrentFunction',
      \   'filetype': 'MyFiletype',
      \   'fileformat': 'MyFileformat',
      \ },
      \ 'separator': { 'left': '', 'right': '' },
      \ 'subseparator': { 'left': '│', 'right': '│' },
      \ }
function! LightlineReadonly()
  return &readonly ? '' : ''
endfunction
function! MyFiletype()
  return winwidth(0) > 70 ? (strlen(&filetype) ? WebDevIconsGetFileTypeSymbol() : 'no ft') : ''
endfunction

function! MyFileformat()
  return winwidth(0) > 70 ? (WebDevIconsGetFileFormatSymbol()) : ''
endfunction

